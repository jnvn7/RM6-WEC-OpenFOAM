/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
#include "../constant/bgMeshing";

scale   1;
Ytp           0;

vertices
(
    ( $Xtn  $Ytn $Ztn)
    ( $Xtm  $Ytn $Ztn)
    ( $Xtp  $Ytn $Ztn)

    ( $Xtp  $Ytp $Ztn)
    ( $Xtm  $Ytp $Ztn)
    ( $Xtn  $Ytp $Ztn)

    ( $Xtn  $Ytn $Ztp)
    ( $Xtm  $Ytn $Ztp)
    ( $Xtp  $Ytn $Ztp)

    ( $Xtp  $Ytp $Ztp)
    ( $Xtm  $Ytp $Ztp)
    ( $Xtn  $Ytp $Ztp)
);

blocks
(
    hex (0 1 4 5 6 7 10 11) ($xCellsbg $yCellsbg $zCellsbg) simpleGrading (1 1 1)
    hex (1 2 3 4 7 8 9 10) ($xCellsbg $yCellsbg $zCellsbg) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    oversetPatch
    {
        type overset;
        faces ();
    }
    atmosphere
    {
        type patch;
        faces
        (
                (11 10 7 6)
                (10 9 8 7)
        );
    }
    inlet
    {
        type patch;
        faces
        (
                (11 6 0 5)
        );
    }
    outlet
    {
        type patch;
        faces
        (
                (8 9 3 2)
        );
    }

    bottom
    {
        type wall;
        faces
        (
                (5 4 1 0)
                (4 3 2 1)
        );
    }
    midPlane_bg
    {
        type symmetryPlane;
        faces
        (
            (6 7 1 0)
            (7 8 2 1)
        );
    }
    symFront
    {
        type symmetryPlane;
        faces
        (
            (10 11 5 4)
            (9 10 4 3)
        );
    }
);

// ************************************************************************* //

